#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
"""
import os
import sys
import subprocess
import threading
import time
import logging
from pathlib import Path
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python"""
    if sys.version_info < (3, 8):
        logger.error("–¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ")
        sys.exit(1)

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    packages_to_check = {
        'telebot': 'pyTelegramBotAPI',
        'streamlit': 'streamlit',
        'apscheduler': 'apscheduler',
        'pandas': 'pandas',
        'numpy': 'numpy'
    }
    
    missing_packages = []
    problematic_packages = []
    
    for import_name, package_name in packages_to_check.items():
        try:
            __import__(import_name)
        except ImportError:
            missing_packages.append(package_name)
        except Exception as e:
            problematic_packages.append((package_name, str(e)))
    
    if missing_packages:
        logger.error(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–∞–∫–µ—Ç—ã: {', '.join(missing_packages)}")
        logger.info("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö –∫–æ–º–∞–Ω–¥–æ–π: pip install -r requirements.txt")
        sys.exit(1)
    
    if problematic_packages:
        logger.error("–ü—Ä–æ–±–ª–µ–º—ã —Å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å—é –ø–∞–∫–µ—Ç–æ–≤:")
        for package, error in problematic_packages:
            logger.error(f"  {package}: {error}")
        logger.info("–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞–∫–µ—Ç—ã:")
        logger.info("  pip uninstall numpy pandas -y")
        logger.info("  pip install -r requirements.txt")
        sys.exit(1)

def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        from bot.db import DatabaseManager
        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        db = DatabaseManager()
        logger.info("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        return db
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        sys.exit(1)

def get_bot_token():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
    token = os.getenv('BOT_TOKEN')
    
    if not token:
        logger.error("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        logger.info("–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.example –∏ —É–∫–∞–∂–∏—Ç–µ BOT_TOKEN")
        logger.info("–ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è: export BOT_TOKEN='your_bot_token_here'")
        
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–≤–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω
        try:
            token = input("–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞: ").strip()
            if not token:
                logger.error("–¢–æ–∫–µ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
                sys.exit(1)
        except KeyboardInterrupt:
            logger.info("–ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            sys.exit(0)
    
    return token

def get_admin_chat_id():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ ID —á–∞—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    admin_id = os.getenv('ADMIN_CHAT_ID')
    
    if not admin_id:
        logger.warning("ADMIN_CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        logger.info("–î–æ–±–∞–≤—å—Ç–µ ADMIN_CHAT_ID –≤ —Ñ–∞–π–ª .env –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –æ—Å–ø–∞—Ä–∏–≤–∞–µ–º—ã—Ö –¥–æ–ª–≥–∞—Ö")
        return None
    
    return admin_id

def run_bot(token):
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    try:
        from bot.main import LunchBot
        
        logger.info("–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
        bot = LunchBot(token)
        bot.start()
        
    except KeyboardInterrupt:
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")

def run_streamlit():
    """–ó–∞–ø—É—Å–∫ Streamlit –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    try:
        logger.info("–ó–∞–ø—É—Å–∫ Streamlit –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏...")
        
        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
        app_path = Path(__file__).parent / "admin_panel" / "app.py"
        
        # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Streamlit
        cmd = [
            sys.executable, "-m", "streamlit", "run", str(app_path),
            "--server.headless", "true",
            "--server.port", "8501",
            "--server.address", "0.0.0.0"
        ]
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º Streamlit
        process = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
        
        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
        time.sleep(3)
        
        logger.info("Streamlit –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∑–∞–ø—É—â–µ–Ω–∞ –Ω–∞ http://localhost:8501")
        
        # –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
        process.wait()
        
    except KeyboardInterrupt:
        logger.info("Streamlit –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        if 'process' in locals():
            process.terminate()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Streamlit: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üçΩÔ∏è LunchBOT - –°–∏—Å—Ç–µ–º–∞ —É—á—ë—Ç–∞ –¥–æ–ª–≥–æ–≤ –∑–∞ –æ–±–µ–¥")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Python
    check_python_version()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    check_dependencies()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    db = init_database()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    token = get_bot_token()
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–¥–º–∏–Ω ID –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
    admin_id = get_admin_chat_id()
    if admin_id:
        db.set_setting('admin_chat_id', admin_id)
        logger.info(f"–ê–¥–º–∏–Ω ID —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {admin_id}")
    
    print("\nüöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã...")
    print(f"üìä –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: http://localhost:8501")
    print(f"ü§ñ Telegram –±–æ—Ç: –∑–∞–ø—É—â–µ–Ω")
    print("\n‚ö° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ—Ç–æ–∫–∏ –¥–ª—è –±–æ—Ç–∞ –∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    bot_thread = threading.Thread(target=run_bot, args=(token,), daemon=True)
    streamlit_thread = threading.Thread(target=run_streamlit, daemon=True)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫–∏
        bot_thread.start()
        streamlit_thread.start()
        
        # –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        while bot_thread.is_alive() or streamlit_thread.is_alive():
            time.sleep(1)
            
    except KeyboardInterrupt:
        logger.info("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
        
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        
    finally:
        logger.info("–°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")

if __name__ == "__main__":
    main() 