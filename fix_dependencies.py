#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ numpy –∏ pandas
"""
import subprocess
import sys
import os

def run_command(cmd):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∏ –≤—ã–≤–µ—Å—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: {cmd}")
    result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
    
    if result.stdout:
        print(f"–í—ã–≤–æ–¥: {result.stdout}")
    if result.stderr:
        print(f"–û—à–∏–±–∫–∏: {result.stderr}")
    
    return result.returncode == 0

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏...")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if not hasattr(sys, 'real_prefix') and not (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix):
        print("‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ!")
        print("   –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ: python3 -m venv venv")
        print("   –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ: source venv/bin/activate")
        print()
    
    # –®–∞–≥ 1: –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
    print("1. –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤...")
    packages_to_remove = ['numpy', 'pandas', 'streamlit']
    
    for package in packages_to_remove:
        if not run_command(f"pip uninstall {package} -y"):
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {package} (–≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)")
    
    # –®–∞–≥ 2: –û—á–∏—â–∞–µ–º –∫—ç—à pip
    print("\n2. –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ pip...")
    run_command("pip cache purge")
    
    # –®–∞–≥ 3: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ requirements.txt
    print("\n3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏–∑ requirements.txt...")
    if not run_command("pip install -r requirements.txt"):
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π!")
        return False
    
    # –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
    print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏...")
    try:
        import numpy
        import pandas
        import streamlit
        import telebot
        import apscheduler
        
        print("‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print(f"   NumPy: {numpy.__version__}")
        print(f"   Pandas: {pandas.__version__}")
        print(f"   Streamlit: {streamlit.__version__}")
        print(f"   PyTelegramBotAPI: {telebot.__version__}")
        
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False

if __name__ == "__main__":
    success = main()
    
    if success:
        print("\nüéâ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
        print("   –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å: python3 run_all.py")
    else:
        print("\nüí• –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
        print("   –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Ä—É—á–Ω—É—é:")
        print("   1. pip uninstall numpy pandas streamlit -y")
        print("   2. pip install -r requirements.txt")
        
    sys.exit(0 if success else 1) 